// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eSHiknYGb4WLC3QGLYLFnQ
// Component: A3je2_yhMh6rvk

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: UvDP15VkVO5hmb/component
import ServiceWhite from "../../ServiceWhite"; // plasmic-import: h9Deuef5XKQXuA/component
import BlueBdr from "../../BlueBdr"; // plasmic-import: FQ-Q35VXL2xeid/component
import ServiceDark from "../../ServiceDark"; // plasmic-import: iZiKFaA41wnFXi/component
import HomeFooterTop from "../../HomeFooterTop"; // plasmic-import: Sh8nt7GR3decD/component
import FooterMain from "../../FooterMain"; // plasmic-import: I_5el5M-Bk81Xi/component

import { useScreenVariants as useScreenVariantspgBiFjijh7ROsO } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PgBiFjijh7ROsO/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_seodapop_main_website.module.css"; // plasmic-import: eSHiknYGb4WLC3QGLYLFnQ/projectcss
import sty from "./PlasmicServices.module.css"; // plasmic-import: A3je2_yhMh6rvk/css

export type PlasmicServices__VariantMembers = {};
export type PlasmicServices__VariantsArgs = {};
type VariantPropType = keyof PlasmicServices__VariantsArgs;
export const PlasmicServices__VariantProps = new Array<VariantPropType>();

export type PlasmicServices__ArgsType = {};
type ArgPropType = keyof PlasmicServices__ArgsType;
export const PlasmicServices__ArgProps = new Array<ArgPropType>();

export type PlasmicServices__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  aboutUsBanner?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  serviceRow?: p.Flex<"div">;
  serviceRow2?: p.Flex<"div">;
  serviceRow3?: p.Flex<"div">;
  footerTopSection?: p.Flex<"div">;
  homeFooterTop?: p.Flex<typeof HomeFooterTop>;
  footerMain?: p.Flex<typeof FooterMain>;
};

export interface DefaultServicesProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicServices__RenderFunc(props: {
  variants: PlasmicServices__VariantsArgs;
  args: PlasmicServices__ArgsType;
  overrides: PlasmicServices__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantspgBiFjijh7ROsO()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicServices.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicServices.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicServices.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"aboutUsBanner"}
            data-plasmic-override={overrides.aboutUsBanner}
            className={classNames(projectcss.all, sty.aboutUsBanner)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vTpKz)}
              >
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"Services"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p14UA
                  )}
                >
                  {hasVariant(globalVariants, "screen", "sm")
                    ? "Lorem Ipsum is simply dummy text of the printing and typesetting indstandard dummy text ever since the 1500s."
                    : "We offer a wide variety of services for both marketing and Application development."}
                </div>
              </p.Stack>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__l2DWg)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fJ1Nh)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oZdWq)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__buFN)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__iu7Hm
                    )}
                  >
                    {"Online Marketing"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eixxt
                    )}
                  >
                    {
                      " We believe that all the efforts of improvement should come together as a whole. When we do your marketing we want to make sure your website is running properly too. That is why we offer you a series of alternatives to make your website the most efficient. The Inbound Marketing Packages we offer come in different “sizes” to accommodate your needs but in essence they all work the same. What we do for your business is literally make it “Visible”.  We will make a campaign to make you come up at the top of the Google search or any other platform of your preference. Be it Google, Bing, Facebook, Instagram, we can make you come up atop the platform your business will profit the most from.\n\n"
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zknGz)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"serviceRow"}
                    data-plasmic-override={overrides.serviceRow}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__iPgC)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__ht2Ye
                          )}
                          slot2={
                            "We are far from that days that a person could launch a website and be the only one on top of google for their business. These days there are lots of competition to  be on top of google. We will help you be on top of google with right tools. We do not just say that we can do it. We actually did it for ourselves too. Will be happy to show you our work. Give us a call"
                          }
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__bUIxJ
                            )}
                          >
                            {"SEO (Search engine optimization)"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__aoByr)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__kp4Fy
                          )}
                          slot2={
                            "#Social . This one is the newest trend. These days people spend more time on their social media site than going anywhere else on the internet. If you like to be successful you have to have a social presence in order for your potential customers to see you. We help you setup and post strategically in order to get more customers. We cover all the major social media sites for you such as linked in, Facebook, twitter, and Instagram. "
                          }
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__eXD
                            )}
                          >
                            {"SMM (Social Media Marketing)"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__bi0Kq)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__a9Ih
                          )}
                          slot2={
                            "PPC is like a photography. Maybe you have your cellphone to take a picture but is the picture that your cellphone takes is the same as the picture that a professional photographer takes with DSLR camera? We are that professional photographer that can leverage all ppc platforms power to make sure that you are not wasting money and only the real customers are clicking on your ads."
                          }
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__fkdIf
                            )}
                          >
                            {"PPC (Pay-per-click optimization)"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___33D32)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__pTq1X
                          )}
                          slot2={
                            "We setup a profile for all the users that are visiting your website, and retarget them with our ads. We will use adwords retargeting capabilities plus facebook pixel technology to achieve our goal."
                          }
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__quIf6
                            )}
                          >
                            {"RETARGETING"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__rDvQ5)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__jx7E
                          )}
                          slot2={
                            "The way in which people learn and absorb information has drastically changed in the last few years. We now look to the internet to entertain us, distract us and teach us!. An emerging method of education is the use of “whiteboard animated videos” style. This is a simple, yet incredibly effective tool in delivering a message.  Teachers and businesses have taken advantage of this new tool because it is so engaging and effective.​\n"
                          }
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__u0Eis
                            )}
                          >
                            {"Whiteboard Animated Videos "}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__qkxIi)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite___1MfRc
                          )}
                          slot2={
                            "Inbound marketing is the combination of all of the other services that we offer. The goal is the make the clients interested in your service and they call you directly instead of visiting your Ads to come to your website. We believe that inbound marketing is the best long-term marketing solution for most businesses. "
                          }
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__jOJo3
                            )}
                          >
                            {"Inbound Marketing"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___4Fecg)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___0LvCp)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__q7Dr)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8OAlw)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__qN49
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "sm")
                      ? "Service category"
                      : "Technical Counsulting"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jQFbS
                    )}
                  >
                    {
                      "With more than fifty years of combined experience in the technology space, we are more than cable of handling your technical needs."
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qcyLi)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"serviceRow2"}
                    data-plasmic-override={overrides.serviceRow2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__kwQ96)}
                    >
                      {true ? (
                        <ServiceDark
                          className={classNames(
                            "__wab_instance",
                            sty.serviceDark__yfV1L
                          )}
                          slot={
                            "We are able to offer you the best tools for your application needs, we will cover security, cost, performance, and many other aspects to make sure that your application architecture is the best in class."
                          }
                        >
                          {"Architect Design"}
                        </ServiceDark>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__shBx)}
                    >
                      {true ? (
                        <ServiceDark
                          className={classNames(
                            "__wab_instance",
                            sty.serviceDark___5Olkd
                          )}
                          slot={
                            "We can review and audit your code base for any security, and programming pattern bugs. We will offer you a completer report once we finish our audits."
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___50FsP
                            )}
                          >
                            {"Code Base Audit"}
                          </div>
                        </ServiceDark>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___4KfVz)}
                    >
                      {true ? (
                        <ServiceDark
                          className={classNames(
                            "__wab_instance",
                            sty.serviceDark__r2UBw
                          )}
                          slot={
                            "Do you have a court case in the technology field? Either you order a custom application or you are a company that creates a custom application and now you have a court case. We will be able to help you with your court case."
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sLzPj
                            )}
                          >
                            {"Expert Witness In Technology"}
                          </div>
                        </ServiceDark>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___5PhH)}
                    >
                      {true ? (
                        <ServiceDark
                          className={classNames(
                            "__wab_instance",
                            sty.serviceDark__pdAEs
                          )}
                          slot={
                            "We are able to integrate applications with different APIs and services. We can write well-written codes to accommodate all your integration needs. "
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wvl3G
                            )}
                          >
                            {"Integration"}
                          </div>
                        </ServiceDark>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__zvOd)}
                    >
                      {true ? (
                        <ServiceDark
                          className={classNames(
                            "__wab_instance",
                            sty.serviceDark___9HqNz
                          )}
                          slot={
                            "We can help you audit your application for HIPPA, PCI, GDPR, and ADA."
                          }
                        >
                          {"Compliance Audit"}
                        </ServiceDark>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__fp32)}
                    >
                      {true ? (
                        <ServiceDark
                          className={classNames(
                            "__wab_instance",
                            sty.serviceDark__in0A
                          )}
                          slot={
                            "We can help you upgrade your Legacy code to modern code with proper Architecture and an affordable price."
                          }
                        >
                          {"Legacy Upgrades"}
                        </ServiceDark>
                      ) : null}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__eljaB)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hn8Jh)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__iFInV)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vRb3L)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__lxKr
                    )}
                  >
                    {"Web Application Development"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ujX0Q
                    )}
                  >
                    {
                      "With more than 20 years of experience and over 100 website build and hosting over 500 websites we are confident that we will not disappoint you with our web design services. "
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tiWaz)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"serviceRow3"}
                    data-plasmic-override={overrides.serviceRow3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow3)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__c4UEb)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__r5Ago
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__uIajj
                            )}
                          >
                            {"Service name"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__j3U9E)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__y7W7S
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__hdkom
                            )}
                          >
                            {"Services 2"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__rfj81)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__dbP7
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__g7A3
                            )}
                          >
                            {"Service name"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__hYRv)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__qqSFh
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__nvvY
                            )}
                          >
                            {"Service name"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__q07Wk)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__zSuDn
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__kMwZy
                            )}
                          >
                            {"Service name"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__gmCi0)}
                    >
                      {true ? (
                        <ServiceWhite
                          className={classNames(
                            "__wab_instance",
                            sty.serviceWhite__sjIGu
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__uk5Fy
                            )}
                          >
                            {"Service name"}
                          </h3>
                        </ServiceWhite>
                      ) : null}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
          <div
            data-plasmic-name={"footerTopSection"}
            data-plasmic-override={overrides.footerTopSection}
            className={classNames(projectcss.all, sty.footerTopSection)}
          >
            <HomeFooterTop
              data-plasmic-name={"homeFooterTop"}
              data-plasmic-override={overrides.homeFooterTop}
              className={classNames("__wab_instance", sty.homeFooterTop)}
            />
          </div>
          <FooterMain
            data-plasmic-name={"footerMain"}
            data-plasmic-override={overrides.footerMain}
            className={classNames("__wab_instance", sty.footerMain)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "aboutUsBanner",
    "foreground2",
    "h1",
    "serviceRow",
    "serviceRow2",
    "serviceRow3",
    "footerTopSection",
    "homeFooterTop",
    "footerMain"
  ],

  header: ["header"],
  aboutUsBanner: ["aboutUsBanner", "foreground2", "h1"],
  foreground2: ["foreground2", "h1"],
  h1: ["h1"],
  serviceRow: ["serviceRow"],
  serviceRow2: ["serviceRow2"],
  serviceRow3: ["serviceRow3"],
  footerTopSection: ["footerTopSection", "homeFooterTop"],
  homeFooterTop: ["homeFooterTop"],
  footerMain: ["footerMain"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  aboutUsBanner: "div";
  foreground2: "div";
  h1: "h1";
  serviceRow: "div";
  serviceRow2: "div";
  serviceRow3: "div";
  footerTopSection: "div";
  homeFooterTop: typeof HomeFooterTop;
  footerMain: typeof FooterMain;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicServices__OverridesType,
  DescendantsType<T>
>;

type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicServices__VariantsArgs;
    args?: PlasmicServices__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicServices__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicServices__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicServices__ArgProps,
          internalVariantPropNames: PlasmicServices__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicServices__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicServices";
  } else {
    func.displayName = `PlasmicServices.${nodeName}`;
  }
  return func;
}

export const PlasmicServices = Object.assign(
  // Top-level PlasmicServices renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    aboutUsBanner: makeNodeComponent("aboutUsBanner"),
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    serviceRow: makeNodeComponent("serviceRow"),
    serviceRow2: makeNodeComponent("serviceRow2"),
    serviceRow3: makeNodeComponent("serviceRow3"),
    footerTopSection: makeNodeComponent("footerTopSection"),
    homeFooterTop: makeNodeComponent("homeFooterTop"),
    footerMain: makeNodeComponent("footerMain"),

    // Metadata about props expected for PlasmicServices
    internalVariantProps: PlasmicServices__VariantProps,
    internalArgProps: PlasmicServices__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Service",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicServices;
/* prettier-ignore-end */
