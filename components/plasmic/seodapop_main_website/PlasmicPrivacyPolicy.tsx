// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eSHiknYGb4WLC3QGLYLFnQ
// Component: _lNaqgp2Dw

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: UvDP15VkVO5hmb/component
import HomeFooterTop from "../../HomeFooterTop"; // plasmic-import: Sh8nt7GR3decD/component
import FooterMain from "../../FooterMain"; // plasmic-import: I_5el5M-Bk81Xi/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_seodapop_main_website.module.css"; // plasmic-import: eSHiknYGb4WLC3QGLYLFnQ/projectcss
import sty from "./PlasmicPrivacyPolicy.module.css"; // plasmic-import: _lNaqgp2Dw/css

export type PlasmicPrivacyPolicy__VariantMembers = {};
export type PlasmicPrivacyPolicy__VariantsArgs = {};
type VariantPropType = keyof PlasmicPrivacyPolicy__VariantsArgs;
export const PlasmicPrivacyPolicy__VariantProps = new Array<VariantPropType>();

export type PlasmicPrivacyPolicy__ArgsType = {};
type ArgPropType = keyof PlasmicPrivacyPolicy__ArgsType;
export const PlasmicPrivacyPolicy__ArgProps = new Array<ArgPropType>();

export type PlasmicPrivacyPolicy__OverridesType = {
  privacyPolicy?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  section?: p.Flex<"section">;
  h1?: p.Flex<"h1">;
  text?: p.Flex<"div">;
  homeFooterTop?: p.Flex<typeof HomeFooterTop>;
  footerMain?: p.Flex<typeof FooterMain>;
};

export interface DefaultPrivacyPolicyProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPrivacyPolicy__RenderFunc(props: {
  variants: PlasmicPrivacyPolicy__VariantsArgs;
  args: PlasmicPrivacyPolicy__ArgsType;
  overrides: PlasmicPrivacyPolicy__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicPrivacyPolicy.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicPrivacyPolicy.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicPrivacyPolicy.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"privacyPolicy"}
          data-plasmic-override={overrides.privacyPolicy}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.privacyPolicy
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__ion5W)}>
            <section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames(projectcss.all, sty.section)}
            >
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#000000" }}
                  >
                    {"Privacy Policy"}
                  </span>
                </React.Fragment>
              </h1>
              <div
                data-plasmic-name={"text"}
                data-plasmic-override={overrides.text}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text
                )}
              >
                {
                  "Seodapop(\"Seodapop\") has created this Privacy Policy in order to disclose its use of consumer data collected about you. This Privacy Policy is effective as of March 28, 2012. You may contact Seodapop via our contact form. The following discloses Seodapop's information gathering and dissemination practices for its website.\n\nInformation Collected and Received Seodapop may collect or receive information about you when you register with the Seodapop website or submit information , including, but not limited to, user name, password, first and last name, email address, street address, gender, occupation, interests, messages sent to other users, and any other data included in a submitted profile or resume. Seodapop may collect information on the pages you access and other information you may volunteer, such as survey information, ratings, reviews, questions, and answers. Seodapop may also record actions taken on its websites including, but not limited to, clicks, page views, IP address, and search queries. Seodapop may store this information on its equipment or the equipment of third parties that it has a relationship with. Please note that emails, messages sent via your web browser, and other similar means of communication with other users are not encrypted. We strongly advise you not to communicate any confidential information through these means.\n\nUses of Information Seodapop may use the information we collect to try to provide a safe, efficient, and customized experience. Seodapop uses this information, including but not limited to your company or personal information, social networks, website metrics, to provide our services and features to you, to measure and improve those services and features, and to provide you with customer support. We may use the information to prevent potentially illegal activities and activities that are detrimental to other users. We may use a variety of methods to detect and address anomalous activity and screen content to prevent abuse such as spam. These efforts may on occasion result in a temporary or permanent suspension or termination of some functions for some users. From time to time, we may, or companies we partner with may, contact you. Seodapop's site may require you to give Seodapop contact information (such as your name, company name and email address) and demographic information. Seodapop may use your contact information to (i) send you brand alerts; (ii) create an account; and (iii) send you information about Seodapop and promotional material from some of Seodapop's partners. Your contact information is also used to contact you when necessary. Seodapop may use demographic and/or profile data to tailor your experience on Seodapop's site, show you content that Seodapop thinks you may be interested in, and display content according to your preferences. To the extent you upload a resume, Seodapop may make the resume and other personal information contained therein available to third parties or search engines. Seodapop reserves the right to charge third parties a fee for accessing your information. This means that the personal information contained in your resume can be viewed by third parties and you may receive unsolicited contact from parties unaffiliated with Seodapop. Seodapop reserves the right to disclose any information when required by law. We may use other companies to perform services necessary to our operations. In the course of providing these services, those companies may have access to your personal information. By contractual agreement, those companies must treat your information in accordance with this Privacy Policy. However, we will not be liable for any damages that may result from the misuse of your personal information by these companies. Seodapop may use your IP address to help diagnose problems with Seodapop's service and to administer Seodapop's site. Your IP address may also be used to help identify you, your location, and your online profile and to gather broad demographic information. Nothing shall restrict Seodapop from maintaining your data following your termination of your relationship with Seodapop. Seodapop may delete your user data at Seodapop’s sole discretion.\n\nSecurity Seodapop uses industry-standard technologies when transferring and receiving consumer data exchanged between Seodapop and other companies to help ensure its security. This site has security measures in place to protect the loss, misuse and alteration of the information under Seodapop's control.\n\nCookies \"Cookies\" are small pieces of information that are stored by your browser on your computer's hard drive. Seodapop's site uses cookies to keep track of your session and advertising delivery. Seodapop may also use cookies to deliver content specific to your interests and to save your password. We use third-party advertising companies to serve ads when you visit our website. These companies may use third-party cookies to record information (not including your name, address, email address, or telephone number) about your visits to this and other websites in order to provide advertisements about goods and services of interest to you. You can learn more here.\n\nLinks Seodapop may create links to other web sites. When you click on links on Seodapop you may leave our site. We are not responsible for the privacy practices of other sites, and we encourage you to read their privacy statements.\n\nAmendments Seodapop may amend this policy at any time. If Seodapop is going to use personally identifiable information collected through Seodapop's site in a manner materially different from that stated at the time of collection Seodapop will notify users via email and/or by posting a notice on Seodapop's website for 30 days prior to such use.\n\nAssignment If there is a change of control in Seodapop’s business (whether by merger, sale, or otherwise) or if there is an asset sale, the user information, including personal information, could be sold as part of that transaction and your personally identifying information potentially could be used by the purchaser. However, if that business materially changes this statement or the information-handling practices as described in this Privacy Policy, you will be notified by email and/or through a notice posted on the website, and you may opt-out of the use of your existing information in a new manner. This Privacy Policy inures to the benefit of any successors or assigns of Seodapop or the assets of Seodapop.\n\nContacts If you have any questions about this Privacy Policy, the practices of this site, or your dealings with this web site, you can contact us.\n\nYou may opt out of any future contacts from us at any time. You can do the following at any time by contacting us via the email address or phone number provided on our website:\n\n– Change/correct any data we have about you.\n\n– Express any concern you have about our use of your data.\n\n\n"
                }
              </div>
            </section>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__ygDo2)}>
            <HomeFooterTop
              data-plasmic-name={"homeFooterTop"}
              data-plasmic-override={overrides.homeFooterTop}
              className={classNames("__wab_instance", sty.homeFooterTop)}
            />

            <FooterMain
              data-plasmic-name={"footerMain"}
              data-plasmic-override={overrides.footerMain}
              className={classNames("__wab_instance", sty.footerMain)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  privacyPolicy: [
    "privacyPolicy",
    "header",
    "section",
    "h1",
    "text",
    "homeFooterTop",
    "footerMain"
  ],
  header: ["header"],
  section: ["section", "h1", "text"],
  h1: ["h1"],
  text: ["text"],
  homeFooterTop: ["homeFooterTop"],
  footerMain: ["footerMain"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  privacyPolicy: "div";
  header: typeof Header;
  section: "section";
  h1: "h1";
  text: "div";
  homeFooterTop: typeof HomeFooterTop;
  footerMain: typeof FooterMain;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPrivacyPolicy__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPrivacyPolicy__VariantsArgs;
    args?: PlasmicPrivacyPolicy__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPrivacyPolicy__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicPrivacyPolicy__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPrivacyPolicy__ArgProps,
          internalVariantPropNames: PlasmicPrivacyPolicy__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPrivacyPolicy__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "privacyPolicy") {
    func.displayName = "PlasmicPrivacyPolicy";
  } else {
    func.displayName = `PlasmicPrivacyPolicy.${nodeName}`;
  }
  return func;
}

export const PlasmicPrivacyPolicy = Object.assign(
  // Top-level PlasmicPrivacyPolicy renders the root element
  makeNodeComponent("privacyPolicy"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    section: makeNodeComponent("section"),
    h1: makeNodeComponent("h1"),
    text: makeNodeComponent("text"),
    homeFooterTop: makeNodeComponent("homeFooterTop"),
    footerMain: makeNodeComponent("footerMain"),

    // Metadata about props expected for PlasmicPrivacyPolicy
    internalVariantProps: PlasmicPrivacyPolicy__VariantProps,
    internalArgProps: PlasmicPrivacyPolicy__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Privacy Policy",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPrivacyPolicy;
/* prettier-ignore-end */
